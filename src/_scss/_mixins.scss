@mixin box-shadow() {
  box-shadow: 0 10px 20px -10px rgba(30, 45, 62, 0.21), 0 5px 30px -5px rgba(31, 44, 60, 0.1);
}

@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
  -moz-box-sizing: $box-model; // Firefox <= 19
  box-sizing: $box-model;
}

@mixin desaturate() {
  -webkit-filter: grayscale(1);
  -webkit-filter: grayscale(100%);
  filter: gray;
  filter: grayscale(100%);
  filter: url(desaturate.svg#greyscale);
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin fadein($duration: 0.25) {
  transition: opacity $duration + s linear;
  -moz-transition: opacity $duration + s linear;
  -webkit-transition: opacity $duration + s linear;
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

@mixin reset-list() {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

@mixin default-list($ol: false) {
  @if $ol {
    list-style-type: decimal;
    list-style-position: outside;
    display: list-item;
  } @else {
    list-style-type: disc;
    list-style-position: outside;
    display: list-item;
  }
}

@mixin transition($duration: 0.2) {
  -webkit-transition: all $duration + s ease-in-out;
  -ms-transition: all $duration + s ease-in-out;
  -moz-transition: all $duration + s ease-in-out;
  -o-transition: all $duration + s ease-in-out;
  transition: all $duration + s ease-in-out;
}

@mixin respond-to($point: medium) {
  @if $point==large {
    @media screen and (min-width: 91em) {
      @content;
    }
  } @else if $point==mediumlarge {
    @media screen and (min-width: 64em) and (max-width: 90.9375em) {
      @content;
    }
  } @else if $point==medium {
    @media screen and (min-width: 40em) and (max-width: 63.9375em) {
      @content;
    }
  } @else if $point==small {
    @media screen and (max-width: 39.9375em) {
      @content;
    }
  }
}

.hide-desktop {
  @include respond-to(large) {
    display: none !important;
  }
}

.hide-tablet {
  @include respond-to(medium) {
    display: none !important;
  }
}

.hide-phone {
  @include respond-to(small) {
    display: none !important;
  }
}

@mixin make-margin-bottom($i: 10) {
  @for $i from 0 through 10 {
    $mb: $i * 10px;

    .mb#{$i*10} {
      @if $i==0 {
        margin-bottom: $mb !important;
      } @else {
        margin-bottom: $mb;
      }
    }

    .mb#{$i*10}i {
      margin-bottom: $mb !important;
    }

    .m-mb#{$i*10} {
      @include breakpoint(medium down) {
        margin-bottom: $mb !important;
      }
    }
  }
}

@mixin make-margin-top($i: 10) {
  @for $i from 0 through 10 {
    $mt: $i * 10px;

    .mt#{$i*10} {
      @if $i==0 {
        margin-top: $mt !important;
      } @else {
        margin-top: $mt;
      }
    }

    .mt#{$i*10}i {
      margin-top: $mt !important;
    }

    .m-mt#{$i*10} {
      @include breakpoint(medium down) {
        margin-top: $mt !important;
      }
    }
  }
}

@mixin make-margin-left($i: 10) {
  @for $i from 0 through 10 {
    $mt: $i * 10px;

    .ml#{$i*10} {
      @if $i==0 {
        margin-left: $mt !important;
      } @else {
        margin-left: $mt;
      }
    }

    .ml#{$i*10}i {
      margin-left: $mt !important;
    }

    .m-ml#{$i*10} {
      @include breakpoint(medium down) {
        margin-left: $mt !important;
      }
    }
  }
}

@mixin make-margin-right($i: 10) {
  @for $i from 0 through 10 {
    $mt: $i * 10px;

    .mr#{$i*10} {
      @if $i==0 {
        margin-right: $mt !important;
      } @else {
        margin-right: $mt;
      }
    }

    .mr#{$i*10}i {
      margin-right: $mt !important;
    }

    .m-mr#{$i*10} {
      @include breakpoint(medium down) {
        margin-right: $mt !important;
      }
    }
  }
}

@mixin make-padding-bottom($i: 10) {
  @for $i from 0 through 10 {
    $mb: $i * 10px;

    .pb#{$i*10} {
      @if $i==0 {
        padding-bottom: $mb !important;
      } @else {
        padding-bottom: $mb;
      }
    }

    .pb#{$i*10}i {
      padding-bottom: $mb !important;
    }

    .m-pb#{$i*10} {
      @include breakpoint(medium down) {
        padding-bottom: $mb !important;
      }
    }
  }
}

@mixin make-padding-top($i: 10) {
  @for $i from 0 through 10 {
    $mt: $i * 10px;

    .pt#{$i*10} {
      @if $i==0 {
        padding-top: $mt !important;
      } @else {
        padding-top: $mt;
      }
    }

    .pt#{$i*10}i {
      padding-top: $mt !important;
    }

    .m-pt#{$i*10} {
      @include breakpoint(medium down) {
        padding-top: $mt !important;
      }
    }
  }
}

@mixin make-padding-left($i: 10) {
  @for $i from 0 through 10 {
    $mt: $i * 10px;

    .pl#{$i*10} {
      @if $i==0 {
        padding-left: $mt !important;
      } @else {
        padding-left: $mt;
      }
    }

    .pl#{$i*10}i {
      padding-left: $mt !important;
    }

    .m-pl#{$i*10} {
      @include breakpoint(medium down) {
        padding-left: $mt !important;
      }
    }
  }
}

@mixin make-padding-right($i: 10) {
  @for $i from 0 through 10 {
    $mt: $i * 10px;

    .pr#{$i*10} {
      @if $i==0 {
        padding-right: $mt !important;
      } @else {
        padding-right: $mt;
      }
    }

    .pr#{$i*10}i {
      padding-right: $mt !important;
    }

    .m-pr#{$i*10} {
      @include breakpoint(medium down) {
        padding-right: $mt !important;
      }
    }
  }
}

@mixin make-width($i: 10) {
  @for $i from 0 through 10 {
    $w: $i * 10%;

    .w#{$i*10} {
      width: $w;

      @include breakpoint(medium down) {
        width: 100%;
      }
    }
  }
}

@mixin make-padding($i: 10) {
  @for $i from 0 through 10 {
    $p: $i * 10px;

    .p#{$i*10} {
      @if $i==0 {
        padding: $p !important;
      } @else {
        padding: $p;
      }
    }

    .p#{$i*10}i {
      padding: $p !important;
    }

    .m-p#{$i*10} {
      @include breakpoint(medium down) {
        padding: $p !important;
      }
    }
  }
}

@mixin make-margin($i: 10) {
  @for $i from 0 through 10 {
    $p: $i * 10px;

    .m#{$i*10} {
      @if $i==0 {
        margin: $p !important;
      } @else {
        margin: $p;
      }
    }

    .m#{$i*10}i {
      margin: $p !important;
    }

    .m-m#{$i*10} {
      @include breakpoint(medium down) {
        margin: $p !important;
      }
    }
  }
}

@include make-width();
@include make-margin();
@include make-padding();
@include make-margin-bottom();
@include make-margin-top();
@include make-margin-left();
@include make-margin-right();
@include make-padding-bottom();
@include make-padding-top();
@include make-padding-left();
@include make-padding-right();

@mixin tt {
  text-transform: uppercase;
  font-weight: 600;
  letter-spacing: rem-calc(3);
}

@mixin center {
  text-align: center;
  justify-content: center;
  display: flex;
  align-items: center;
}

.fade-in {
  animation-name: fadeIn;
  animation-duration: 1.3s;
  animation-timing-function: cubic-bezier(0, 0, 0.4, 1); // animation-fill-mode: forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}
